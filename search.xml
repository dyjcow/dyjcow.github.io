<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>减肥里的科学和How to 减肥</title>
      <link href="/2022/02/06/jian-fei-li-de-ke-xue-he-how-to-jian-fei/"/>
      <url>/2022/02/06/jian-fei-li-de-ke-xue-he-how-to-jian-fei/</url>
      
        <content type="html"><![CDATA[<h1 id="减肥里的科学和How-to-减肥"><a href="#减肥里的科学和How-to-减肥" class="headerlink" title="减肥里的科学和How to 减肥"></a>减肥里的科学和How to 减肥</h1><h2 id="1-热量公式"><a href="#1-热量公式" class="headerlink" title="1. 热量公式"></a>1. 热量公式</h2><blockquote><p>影响胖瘦最基本的因素：<strong>热量差</strong></p><p><strong>热量差</strong>=<strong>摄入热量</strong>ー<strong>消耗热量</strong></p><p>当摄入热量&gt;消耗热量，体重会增加</p><p>当消耗热量&gt;摄入热量，体重会减轻</p></blockquote><h2 id="2-摄入热量"><a href="#2-摄入热量" class="headerlink" title="2. 摄入热量"></a>2. 摄入热量</h2><blockquote><p><strong>摄入热量是指吃进去的一切食物产生的热量</strong></p><p>减肥是以<strong>天</strong>或者<strong>周</strong>为<strong>单位</strong>计算摄入热量</p><p>例1：一天需要消耗热量为2000kcal，早上狂吃1500kcal食物，中午和晚上不吃。</p><p>例2：三天需要消耗热量为6000kcal，第一天吃3000kcal食物，第二三天吃2000kcal食物。</p><p>那么摄入热量&lt;消耗热量=<strong>减肥成功</strong></p><p>(PS：个人不建议这样，这样会导致晚上或者第2天吃得更多导致长胖。还有就是<strong>一次性吃大量食物消耗不完会转化为脂肪存在体内</strong>)</p><p>例3：一天需要消耗热量为2000kcal，除正餐吃够2000kcal热量外，还可以吃些零食增加摄入热</p><p>那么摄入热量&gt;消耗热量=<strong>增重成功</strong></p><p>想减肥的吃不够，想增重的吃不进去怎么办？</p><p>减肥食物选择：热量低、饱腹感强</p><p>增重食物选择：热量高、饱腹感弱</p></blockquote><ul><li><p>减肥食物推荐</p><p><img src="https://s2.loli.net/2022/02/05/jPKtNbUd5klfzQw.png"></p></li></ul><h2 id="3-消耗热量"><a href="#3-消耗热量" class="headerlink" title="3.消耗热量"></a>3.消耗热量</h2><blockquote><p><strong>a运动</strong></p><p>不管是有氧运动还是无氧运动，心肺运动还是抗阻运动，只要动了热量就会有所消耗</p><p><strong>拿快递外卖、骑共享单车、洗碗、拖地都算是运动</strong></p><p><strong>想要减肥后不反弹，要适当做抗阻运动</strong></p><p><strong>b基础代谢</strong></p><p>基础代谢是指人体在18～25℃室温下，空腹、平卧并处于清醒、安静的状态称为基础状态。此时，维持心跳、呼吸等基本生命活动所必需的最低能量代谢，称基础代谢（BM）</p><p>基础代谢影响因素：</p><p><strong>①体重</strong>，体重越大基础代谢率越大</p><p><strong>②遗传基因</strong>，有些基因可能会导致肥胖</p><p><strong>③甲状腺激素</strong>，甲亢会导致基础代谢率升高</p><p><strong>④肠道菌群</strong>，有些肠道菌群可以帮助消化，提高代谢率</p></blockquote><ul><li><p>基础代谢计算公式**(久坐的工作x1.2,偶尔外出x1.5)**</p><p><img src="https://s2.loli.net/2022/02/05/Bzm9cnZHNTFwq4S.png"></p></li></ul><blockquote><p>1.问：为什么比较胖的人一开始瘦的特别快？</p><p>   答：瘦的快的原因是体重越大基础代谢越大</p><p>2.问：为什么有些人减肥减着就减不动了？</p><p>   答：因为在其他条件都不变的情况下，体重轻了，基础代谢也小了，消耗也少了。</p></blockquote><h2 id="4-肠道杆菌"><a href="#4-肠道杆菌" class="headerlink" title="4.肠道杆菌"></a>4.肠道杆菌</h2><blockquote><p><strong>肠道中一般存在两种细菌：厚壁菌门与拟杆菌门</strong></p><p><strong>厚壁菌</strong>：可以帮助人体更高效的从复杂的碳水化合物里吸收热量</p><p><strong>拟杆菌</strong>：则能够分解人体本身无法消化的多糖（如纤维素等）再向宿主提供营养的同时也为自己和肠道中的其他细菌获得食物。</p><p>一般吃不胖的人肠道中的：拟杆菌&gt;厚壁菌</p><p>一般喝水都胖的人肠道中：拟杆菌&lt;厚壁菌</p><p><strong>如果想长胖，可以多吃热量高、淀粉含量高的食物，增加肠道内厚壁菌的数量</strong></p><p><strong>如果想减肥，可以经常吃纤维多的食物，例如蔬菜、粗粮，增加肠道中拟杆菌的数量</strong></p></blockquote><h2 id="5-饮食"><a href="#5-饮食" class="headerlink" title="5.饮食"></a>5.饮食</h2><blockquote><p><strong>1.维生素与胖瘦</strong></p><p><strong>维生素C</strong></p><p>长期缺乏维生素C，容易越来越胖。维生素C能合成肉碱，促进脂肪代谢，加速脂肪的分解和燃烧。</p><p>新陈代谢的过程中，如果肉碱含量不足，就会导致脂肪囤积，形成脂肪组织。研究发现维生素C摄入充足的人，运动时燃烧的脂肪比维生素摄入不足的人要多30%。</p><p><strong>维生素D</strong>是人体制造瘦素所必需的。瘦素是一种可控制人食欲的激素，它会使人在进餐后产生吃饱的感觉，从而停止进食。</p><p>人体内的瘦素含量若不断降低，胃口就会越来越大，从而更容易患上肥胖症。所以，控制卡路里减肥时，多吸收维生素D可以帮助减肥瘦身的人更加轻松地减肥。</p><p><strong>2.暴饮暴食与不吃早饭</strong></p><p>当你暴饮暴食时，<strong>多吃入的食物会在体内转化为脂肪储存导致长胖</strong>。</p><p>不吃早餐，午饭会吃得更多，导致长胖，长期不吃早饭还可能导致胆结石、胃炎肠道疾病。</p><p><strong>3.饮食结构与胖瘦</strong></p><p>长期以高油、高糖食物为主食的人普遍偏胖(例如炸鸡、披萨、薯条)</p><p><strong>长期以蔬菜、粗粮食物为主食的人普遍偏瘦</strong></p></blockquote><h2 id="6-褐色脂肪与肥瘦的关系"><a href="#6-褐色脂肪与肥瘦的关系" class="headerlink" title="6.褐色脂肪与肥瘦的关系"></a>6.褐色脂肪与肥瘦的关系</h2><blockquote><p>人体内一般包含两种脂肪：白色脂肪与褐色脂肪</p><p><strong>白色脂肪</strong>的主要功能是将体内多余的能量以脂肪的形式储存起来，当我们摄入过多热量时，就会引起肥胖。</p><p><strong>褐色脂肪</strong>的主要特性是消耗能量。棕色脂肪类似于一个“产热器”，它的主要功能就是生热（帮助我们在寒冷的环境下维持体温）。生热需要消耗能量（卡路里）</p><p>褐色脂肪的主要功能是产热，它的产热能力是肝脏的60倍，是肌肉有氧的情况下产热量的10倍。研究发现：仅50克的褐色脂肪可以燃烧的热量可以达到人的基础代谢的20%。</p><p>年龄越大、体形越胖，体内褐色脂肪越少；</p><p>年龄越小、体型越瘦，体内褐色脂肪越多；</p><p>降低温度，体内褐色脂肪就更活跃；</p><p><strong>女人体内比男人更多有褐色脂肪</strong>。</p><p>如何增加体内褐色脂肪</p><p><strong>1.养成良好规律的睡眠习惯，保证充足睡眠</strong></p><p>睡眠激素—褪黑素，会影响褐色脂肪，在一项大鼠研究中发现：具有较高褪黑素的大鼠，拥有更多的褐色脂肪。</p><p><strong>2.每周适当运动</strong></p><p>日常生活中，坚持每天半小时以上的中强度运动，如慢跑、快走、游泳等可以调动褐色脂肪，增加褐色脂肪活性。</p></blockquote><h2 id="7-如何科学减肥呢"><a href="#7-如何科学减肥呢" class="headerlink" title="7.如何科学减肥呢"></a>7.如何科学减肥呢</h2><ul><li><p>饮食习惯</p><blockquote><ol><li>热量要按天控制，尽量吃食物推荐表里面的低热量食物(一般比较香的食物是高热量食物)</li><li>吃饭切记细嚼慢咽和喝清汤，这是给自己饱腹感</li><li>每天给自己<strong>部分能量</strong>来自<strong>粗粮</strong>或者<strong>水果蔬菜</strong></li><li><strong>一定要吃早餐</strong></li></ol></blockquote></li><li><p>作息</p><blockquote><ol><li>早睡早起，12点睡觉，8点起床</li><li>规律午觉时间，尽量每天同一时间睡午觉，周末也不例外</li><li>算上走路等，每天最好有40分钟运动事件。可以是跑步，也可以单纯走快点</li></ol></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 科学减肥 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 减肥 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二章 Activity(看得见的活动)|《第一行代码》笔记</title>
      <link href="/2022/02/04/di-er-zhang-activity-kan-de-jian-de-huo-dong/"/>
      <url>/2022/02/04/di-er-zhang-activity-kan-de-jian-de-huo-dong/</url>
      
        <content type="html"><![CDATA[<h2 id="1-活动是什么"><a href="#1-活动是什么" class="headerlink" title="1. 活动是什么"></a>1. 活动是什么</h2><p>活动是一个包含用户界面的组件，可以理解为一个APP中的页面，是直接展示给用户的组件。</p><h2 id="2-活动创建步骤"><a href="#2-活动创建步骤" class="headerlink" title="2.活动创建步骤"></a>2.活动创建步骤</h2><blockquote><ol><li>项目中new一个<code>Empty Activity</code>,勾选<code>Generate Layout File</code>为<code>Activity</code>自动创建一个布局文件</li><li>在<strong>res/layout</strong>下找到与你刚创建的<code>Activity</code>绑定的布局文件，在布局文件中添加对应组件和编辑布局</li><li>在<strong>AndroidManifest.xml</strong>中注册声明该活动</li></ol></blockquote><p>主活动配置代码</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.actoin.MAIN<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.LAUNCHER<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-活动的简单使用"><a href="#3-活动的简单使用" class="headerlink" title="3. 活动的简单使用"></a>3. 活动的简单使用</h2><h3 id="3-1-活动中使用Toast的代码"><a href="#3-1-活动中使用Toast的代码" class="headerlink" title="3.1 活动中使用Toast的代码"></a>3.1 活动中使用Toast的代码</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//直接在对应的FirstActivity中编辑下列</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//在Activity创建阶段就创建绑定好显示型组件</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//重写方法的时候，继承原方法特性</span>    <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>first_layout<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//绑定布局文件</span>    <span class="token class-name">Button</span> button1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button_1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//新建和绑定组件</span>    button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//为Button组件设置监听事件</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//设置监听到button1被按下时候执行下列事件</span>            <span class="token comment">//通过静态方法makeText创建出一个Toast对象，其三个参数分别为Context,Text,Time;再链式调用show()方法显示</span>            <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"You click Button"</span><span class="token punctuation">,</span>                          <span class="token class-name">Toast</span><span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2-活动中使用Menu的代码"><a href="#3-2-活动中使用Menu的代码" class="headerlink" title="3.2 活动中使用Menu的代码"></a>3.2 活动中使用Menu的代码</h3><blockquote><p>到资源文件夹中新建<strong>menu</strong>文件夹，在该文件夹中新建<strong>menu</strong>资源文件</p></blockquote><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--menu资源文件，此处为简单试用，只需添加id和title属性--&gt;</span><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>menu</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>      <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/add_item<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Add<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/remove_item<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Remove<span class="token punctuation">"</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>menu</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>回到<strong>FirstActivity</strong>中重写关于<strong>menu</strong>的对应方法</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//在OnCreate方法之外编写以下的方法，inflater(充气机)</span><span class="token annotation punctuation">@Override</span>   <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onCreateOptionsMenu</span><span class="token punctuation">(</span><span class="token class-name">Menu</span> menu<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//重写该方法载入绑定menu资源文件</span>       <span class="token function">getMenuInflater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>menu<span class="token punctuation">.</span>main<span class="token punctuation">,</span>menu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用该方法绑定</span>       <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//true为显示menu,false为不显示</span>   <span class="token punctuation">}</span>   <span class="token annotation punctuation">@Override</span>   <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onOptionsItemSelected</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">MenuItem</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//重写该方法，定义菜单响应事件</span>       <span class="token keyword">switch</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getItemId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>           <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>add_item<span class="token operator">:</span>               <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"You clicked add_item"</span><span class="token punctuation">,</span><span class="token class-name">Toast</span><span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token keyword">break</span><span class="token punctuation">;</span>           <span class="token keyword">case</span> <span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>remove_item<span class="token operator">:</span>               <span class="token class-name">Toast</span><span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token string">"You clicked remove_item"</span><span class="token punctuation">,</span><span class="token class-name">Toast</span><span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token keyword">break</span><span class="token punctuation">;</span>           <span class="token keyword">default</span><span class="token operator">:</span>               <span class="token keyword">break</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment">//记得返true</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-使用Intent在活动中穿梭"><a href="#4-使用Intent在活动中穿梭" class="headerlink" title="4. 使用Intent在活动中穿梭"></a>4. 使用Intent在活动中穿梭</h2><h3 id="4-1-显式Intent"><a href="#4-1-显式Intent" class="headerlink" title="4.1 显式Intent"></a>4.1 显式Intent</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//新建SecondActivity之后，使用Intent从FirstActivity跳转到SecondActivity中</span><span class="token comment">//修改FirstActivity为</span><span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>first_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button_1<span class="token punctuation">)</span><span class="token punctuation">;</span>        button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">//new一个Intent重载</span>                <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">SecondActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用startActivity()重载</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2-隐式Intent"><a href="#4-2-隐式Intent" class="headerlink" title="4.2 隐式Intent"></a>4.2 隐式Intent</h3><blockquote><p>概述：恰如其意，隐式调用不直接指明某一个类，而是指定<code>action</code>和<code>category</code>(类别)等信息，让系统去分析应该跳转到哪个app的哪个活动之中。</p><p>注意：</p><ol><li>目标<strong>Activity</strong>需要在<strong>AndroidManifest.xml</strong>文件中配置好<code>&lt;intent-filter&gt;</code>的内容，指定好能响应的<code>action</code>和<code>category</code>等信息。而在执行<code>Intent</code>的<strong>Activity</strong>中，也需要同时匹配上这对应的<code>action</code>和<code>category</code>，活动才可以响应。</li><li>每个<code>Intent</code>中只能指定一个<code>action</code>,但是却可以同时指定多个<code>category</code>，<code>category</code>是包含了附加信息的标签，其功能是让<code>Intent</code>精准定位到对应的<strong>Activity</strong>中。由于<code>action</code>的编写是相对统一的，例如手机中的浏览器都具有被调用打开网页的功能，而它们配置的<code>action</code>都是“<code>Intent.ACTION_VIEW</code>”；多个<code>category</code>的作用在于，当我想固定调用QQ浏览器时，在<code>Intent</code>跳转的时候载入QQ浏览器中配置的<code>category</code>标签即可无需选择直接打开QQ浏览器。</li><li>配置<code>&lt;data&gt;</code>标签，详细看下例</li></ol></blockquote><ul><li><p>普通调用</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--AndroidManifest.xml文件中SecondActivity的配置--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.activitytest.ACTION_START<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.DEFAULT<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//Activiy中的Intent跳转</span> button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment">//此处无需指定category，因为它是默认的，调用startActivity的时候会自动添加进去</span>                <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"com.example.activitytest.ACTION_START"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>多category调用</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--AndroidManifest.xml文件中SecondActivity的配置--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.activitytest.ACTION_START<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.DEFAULT<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.example.activitytest.MY_CATEGORY<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//Activiy中的Intent跳转</span> button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token string">"com.example.activitytest.ACTION_START"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//此处配置文件中有多个category，需要指定非默认的category</span>                intent<span class="token punctuation">.</span><span class="token function">addCategory</span><span class="token punctuation">(</span><span class="token string">"com.example.activitytest.MY_CATEGORY"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>带<code>&lt;data&gt;</code>标签的用法</p><blockquote><p><code>&lt;data&gt;</code>标签用于更精确地指定当前活动能够响应什么类型的数据，主要可以配置以下活动</p><p><strong>tips</strong>：下面涉及到计算机网络的知识，入门可以参考<a href="https://pan.baidu.com/share/init?surl=KlvowIliskjXrIwAdeUi9A">《图解HTTP》</a>(提取码：6gpm)</p><p><strong>android:scheme</strong>  用于指定数据的协议部分，如下边的http部分</p><p><strong>android:host</strong>  指定数据的主机名部分，如下边的<a href="http://www.baidu.com部分/">www.baidu.com部分</a></p><p><strong>android:port</strong>  用于指定数据的端口部分，一般紧随在主机名之后</p><p><strong>android:path</strong>  用于指定主机名和端口之后的部分，如一段网址中跟在域名之后的内容</p><p><strong>android:mimeType</strong>  用于指定可以处理的数据类型，允许使用通配符的方式进行指定</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java">button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>           <span class="token annotation punctuation">@Override</span>           <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>               <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">Intent</span><span class="token punctuation">.</span>ACTION_VIEW<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">//此处键入对应的的data，Uri.parse方法把字符串解析为uri对象</span>               intent<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">"http://www.baidu.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                              <span class="token comment">//跳转到系统拨号界面</span>               <span class="token comment">//Intent intent = new Intent(Intent.ACTION_DIAL);</span>               <span class="token comment">//intent.setData(Uri.parse("tel:10086"));</span>               <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>       <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--AndroidManifest.xml文件中ThirdActivity的配置，指定了数据协议必须是http--&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.ThirdActivity<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.action.VIEW<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>android.intent.category.DEFAULT<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data</span> <span class="token attr-name"><span class="token namespace">android:</span>scheme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>        <span class="token comment">&lt;!--其他协议：--&gt;</span><span class="token comment">&lt;!--geo表示显示地理位置--&gt;</span><span class="token comment">&lt;!--tel表示拨打电话--&gt;</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activity</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>上例中的<strong>http</strong>协议在<strong>Android7</strong>中适用，但是在<strong>Android9</strong>中开始不适用.新版本默认支持<strong>https</strong>，<a href="https://www.jianshu.com/p/97519d17056a">点击查看区别</a></p><p>我们需要在<strong>AndroidManifest.xml</strong>中如下配置，以支持<strong>HTTP</strong>明文</p><p>法1:在<strong>res</strong>目录下新建<strong>xml</strong>目录，在该目录下新建配置文件 <strong>network_security_config.xml</strong>，内容为：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>network-security-config</span><span class="token punctuation">&gt;</span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>base-config</span> <span class="token attr-name">cleartextTrafficPermitted</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>network-security-config</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后在<strong>AndroidManifest.xml</strong>文件的<code>applicaiton</code>段增加了<code>networkSecurityConfig</code>一行</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span>             <span class="token attr-name">...</span> <span class="token attr-name"><span class="token namespace">android:</span>networkSecurityConfig</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/network_security_config<span class="token punctuation">"</span></span>             <span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>法2：直接在<strong>AndroidManifest.xml</strong>文件的<code>applicaiton</code>段增加了<code>usesCleartextTraffic</code>一行</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span>             <span class="token attr-name">...</span> <span class="token attr-name"><span class="token namespace">android:</span>usesCleartextTraffic</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>             <span class="token punctuation">&gt;</span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote></li></ul><h3 id="4-3-利用Intent向下一个活动传数据"><a href="#4-3-利用Intent向下一个活动传数据" class="headerlink" title="4.3 利用Intent向下一个活动传数据"></a>4.3 利用Intent向下一个活动传数据</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//FirstActivity</span><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>first_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Button</span> button1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button_1<span class="token punctuation">)</span><span class="token punctuation">;</span>    button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">String</span> data <span class="token operator">=</span> <span class="token string">"Hello Word"</span><span class="token punctuation">;</span>            <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">SecondActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"extra_data"</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//第一个参数是键，第二个参数是真正的value（数据）</span>            <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment">//调用封装的方法传递数据</span>            <span class="token comment">//SecondActivity.actionStart(FirstActivity.this, "data1", "data2");</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//SecondActivity</span><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>second_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token function">getIntent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> data <span class="token operator">=</span> intent<span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"extra_data"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//对应的还有：getIntExtra(),getBooleanExtra()等方法</span><span class="token punctuation">}</span><span class="token comment">//将传递数据的功能封装，方便之后的调用</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">actionStart</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">String</span> data1<span class="token punctuation">,</span> <span class="token class-name">String</span> data2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token class-name">SecondActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"param1"</span><span class="token punctuation">,</span> data1<span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"param2"</span><span class="token punctuation">,</span> data2<span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-4-利用Intent向上一个活动返回数据"><a href="#4-4-利用Intent向上一个活动返回数据" class="headerlink" title="4.4 利用Intent向上一个活动返回数据"></a>4.4 利用Intent向上一个活动返回数据</h3><blockquote><p><code>startActivityForResult(Intent intent,int requestCode )</code> 该方法也是用于启动活动的，但这个方法期望在下一个活动被销毁的时候能够返回一个结果给本活动。顾名思义，该函数声明本活动允许接受下一个活动返回的结果</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//FirstActivity</span><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">SecondActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//第二个参数的请求码只需要唯一即可，在重写OnActivityResult()方法的时候会使用到。建议取大于1的值</span>         <span class="token function">startActivityForResult</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//在SecondActivity销毁的时候会回调这一个方法</span><span class="token comment">/*** @param requestCode 请求码，对应为startActivityForResult中的1* @param resultCode 返回数据的结果，对应为setResult()的第一个参数* @param data 数据，即对应的Intent*/</span><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onActivityResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token keyword">int</span> resultCode<span class="token punctuation">,</span> <span class="token class-name">Intent</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>requestCode<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//startActivityForResult(Intent intent,int requestCode )传入的1</span>        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>resultCode <span class="token operator">==</span> RESULT_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">String</span> returnedData <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">getStringExtra</span><span class="token punctuation">(</span><span class="token string">"data_return"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"FirstActivity"</span><span class="token punctuation">,</span> returnedData<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token operator">:</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//SecondActivity</span><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"SecondActivity"</span><span class="token punctuation">,</span> <span class="token string">"Task id is "</span> <span class="token operator">+</span> <span class="token function">getTaskId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>second_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Button</span> button2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button_2<span class="token punctuation">)</span><span class="token punctuation">;</span>    button2<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//在点下button后向上一活动发送返回值，并且关闭该活动</span>            <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"data_return"</span><span class="token punctuation">,</span> <span class="token string">"Hello FirstActivity"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//本方法专门用于返回处理结果，第一个参数可选RESULT_OK或RESULT_CANCELED两个值，第二个则为带数据的intent</span>    <span class="token function">setResult</span><span class="token punctuation">(</span>RESULT_OK<span class="token punctuation">,</span> intent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBackPressed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//实现在直接按返回键的时候也达到一样的功能</span>    <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"data_return"</span><span class="token punctuation">,</span> <span class="token string">"Hello FirstActivity"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setResult</span><span class="token punctuation">(</span>RESULT_OK<span class="token punctuation">,</span> intent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>温馨提示：最新的sdk中，<code>startActivityForResult</code>方法已经被弃用，想了解和掌握新的API使用方法，参照下面的两篇博客</p><p><a href="https://guolin.blog.csdn.net/article/details/121063078?spm=1001.2014.3001.5502">Activity Result API详解，是时候放弃startActivityForResult了_郭霖的专栏-CSDN博客</a></p><p><a href="https://blog.csdn.net/hx7013/article/details/120916287?spm=1001.2014.3001.5502">startActivityForResult被标记为弃用后，如何优雅的启动Activity?_葫芦娃-CSDN博客</a></p><h2 id="5-活动的生命周期"><a href="#5-活动的生命周期" class="headerlink" title="5. 活动的生命周期"></a>5. 活动的生命周期</h2><h3 id="5-1-活动状态"><a href="#5-1-活动状态" class="headerlink" title="5.1 活动状态"></a>5.1 活动状态</h3><p><a href="https://developer.android.google.cn/guide/components/activities/state-changes">官方指南</a></p><blockquote><ol><li><strong>运行状态</strong>：活动处于栈顶的时候，系统最不愿回收</li><li><strong>暂停状态</strong>：不在栈顶，但仍可见(部分可见)的活动；即跳出一个小弹窗后，下方被覆盖的活动即属于暂停状态。系统也不愿回收</li><li><strong>停止状态</strong>：不在栈顶，不可见的活动；即被新的Activity完全覆盖的活动，系统可能回收</li><li><strong>销毁状态</strong>：不在栈中的活动；即被<code>finish()</code>的活动，系统最愿意回收</li></ol></blockquote><h4 id="5-2-活动的生存期"><a href="#5-2-活动的生存期" class="headerlink" title="5.2 活动的生存期"></a>5.2 活动的生存期</h4><p><a href="https://developer.android.google.cn/guide/components/activities/activity-lifecycle">官方指南</a></p><blockquote><ol><li><strong>完整生存期</strong></li><li><strong>可见生存期</strong></li></ol></blockquote><p><img src="https://s2.loli.net/2022/02/04/TF1oHg4rf6bJdlx.png"></p><blockquote><ol><li><code>onCreate()</code>  活动第一次创建的时候会调用这个方法，我们需要在这个方法中完成活动的初始化操作，例如加载布局文件和绑定事件。接下来就进入到<code>onStart()</code>中</li><li><code>onStart()</code>  活动由不可见变可见，<strong>Activity</strong>进入前台，但是仍无法交互。当 <strong>Activity</strong> 进入已开始状态时，与 <strong>Activity</strong> 生命周期相关联的所有生命周期感知型组件都将收到 <code>ON_START</code>事件。，这个状态会迅速完成，进入到<code>onResume()</code>中</li><li><code>onResume()</code>   活动进入到可交互阶段，即正常使用的状态。此时活动一定位于栈顶，正在运行阶段</li><li><code>onPause()</code>  此方法表示Activity不再处于前台(多窗口模式时也是)，但仍然可见。这个方法是暂停，在准备去启动或者恢复另一个活动的时候调用。譬如弹出弹窗，或者在多窗口模式下点击另一活动的时候；本活动便调用<code>onPause()</code>方法，且不处于焦点之中。这时候，系统会释放掉一些与界面无关的消耗CPU的资源。</li><li><code>onStop()</code>  该方法在活动完全不可见的时候调用，此时活动被完全覆盖，进入了停止状态。对应的与界面有关的效果会停止更新或者粗略更新。<strong>我们能重写该方法，在活动调用该方法的时候保存应用或者用户数据、进行网络调用或者执行数据库事务</strong></li><li><code>onDestroy()</code>  在活动被销毁前调用该方法，包括①<strong>Activity</strong>即将结束(被彻底关闭或执行了<code>finish()</code>)； ②配置变更(设备旋转或执行了多窗口模式)，<strong>Activity</strong>被暂时销毁，之后还会重新启用<code>onCreate()</code>。我们可以在该回调释放前面回调未释放的资源。当然，我们也可以配置使得当配置变更时不会执行此回调，这样子在启动全屏播放视频时候不会出现差的用户体验</li><li><code>onRestart()</code>  由<code>onStop()</code>变为<code>onStart()</code>前调用。即被覆盖的页面重新被打开的时候，需要被调用。</li></ol></blockquote><h3 id="5-3-活动被回收怎么办"><a href="#5-3-活动被回收怎么办" class="headerlink" title="5.3 活动被回收怎么办"></a>5.3 活动被回收怎么办</h3><p>前言：当活动被回收之后，再次打开会使用到<code>onCreate()</code>而不是使用<code>onStart()</code>,这种情况下的活动是被重新创建的。当活动被重新创建，我们在页面中保存的数据（譬如输入文本框中的文字）会被清除掉，这样会严重影响用户的使用体验。</p><p>解决方法(类似Intent)：</p><ol><li><p>使用<code>onSaveInstanceState()</code>回调方法，此方法保证活动被回收前一定会被调用。重写此方法能将被回收活动的数据保存下来,以便重新创建活动的时候能够复现出来。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSaveInstanceState</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> outState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onSaveInstanceState</span><span class="token punctuation">(</span>outState<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> tempData <span class="token operator">=</span> <span class="token string">"Something you just typed"</span><span class="token punctuation">;</span>    <span class="token comment">//该参数下的链式方法包括 putString() putInt() 等</span>    <span class="token comment">//对应方法的参数是键值对形式，第一个参数是键，第二个参数是值</span>    outState<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string">"data_key"</span><span class="token punctuation">,</span>tempData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>对应的，我们也需要在<code>onCreate()</code>中处理Bundle类型的数据，让其在重新创建的时候复现出来</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span><span class="token string">"onCreate"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>savedInstanceState <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token class-name">String</span> tempData <span class="token operator">=</span> savedInstanceState<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"data_key"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span>tempData<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><p>Tips:上例是Bundle数据的存储和取出方式。我们可以把Bundle数据存储到Intent中，然后借助Intent来进行数据传输</p><h2 id="6-活动的启动模式"><a href="#6-活动的启动模式" class="headerlink" title="6.活动的启动模式"></a>6.活动的启动模式</h2><blockquote><p>我们可以通过在<strong>AndroidManifest.xml</strong>中给<activity>标签指定<strong>android:launchMode</strong>的属性，即可确定活动的启动方式</activity></p></blockquote><h3 id="6-1-standard"><a href="#6-1-standard" class="headerlink" title="6.1 standard"></a>6.1 standard</h3><blockquote><p>不会在乎活动是否在返回栈中存在，每次启动都会创建一个新的实例(系统默认的)</p></blockquote><p><img src="https://s2.loli.net/2022/02/04/WOzynQJ9FIBigtk.png"></p><h3 id="6-2-singleTop"><a href="#6-2-singleTop" class="headerlink" title="6.2 singleTop"></a>6.2 singleTop</h3><blockquote><p>启动的时候如果发现返回栈的栈顶是该活动，则不会启动新的，直接使用。否则，启动新的活动</p></blockquote><p><img src="https://s2.loli.net/2022/02/04/fFZL9GYj1pgHtI6.png"></p><h3 id="6-3-singleTask"><a href="#6-3-singleTask" class="headerlink" title="6.3 singleTask"></a>6.3 singleTask</h3><blockquote><p>每次启动该活动的时候，系统首先会在返回栈中检查是否存在该活动的实例，如果发现已经存在该活动的实例，则直接使用该实例，并把在这个活动之上的所有活动<strong>全部出栈</strong>。若不存在该实例，则创建一个新的活动实例。</p></blockquote><p><img src="https://s2.loli.net/2022/02/04/hR64fdV73tLTMJm.png"></p><h3 id="6-4-singleInstance"><a href="#6-4-singleInstance" class="headerlink" title="6.4 singleInstance"></a>6.4 singleInstance</h3><blockquote><p>假设我们的程序中有一个活动是<strong>允许其他程序调用</strong>的(例如从一个APP的广告页面点击到达购物软件的商品详情窗口)，我们需要实现其他程序和我们的程序可以共享这个活动的实例，就要使用到singleInstance。这个共享的实例有自己单独的一个返回栈来管理活动(譬如返回栈B)。</p></blockquote><p><img src="https://s2.loli.net/2022/02/04/Bv4Xoe2FJminxdU.png"></p><h2 id="7-活动的最佳实践"><a href="#7-活动的最佳实践" class="headerlink" title="7. 活动的最佳实践"></a>7. 活动的最佳实践</h2><h3 id="7-1-知晓当前活动"><a href="#7-1-知晓当前活动" class="headerlink" title="7.1 知晓当前活动"></a>7.1 知晓当前活动</h3><blockquote><p>写<strong>BaseActivity</strong>,在该类中加入<code>Log.d("BaseActivity", getClass().getSimpleName());</code>；让所有的<strong>Activity</strong>继承<strong>BaseActivity</strong>，这样子就能每个<strong>Activity</strong>都打印出来了</p></blockquote><h3 id="7-2-设置能随时退出程序"><a href="#7-2-设置能随时退出程序" class="headerlink" title="7.2 设置能随时退出程序"></a>7.2 设置能随时退出程序</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//ActivityCollector</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ActivityCollector</span> <span class="token punctuation">{</span><span class="token comment">//此类用于管理活动，对活动入栈、出栈和清栈</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Activity</span><span class="token punctuation">&gt;</span></span> activities <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addActivity</span><span class="token punctuation">(</span><span class="token class-name">Activity</span> activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>        activities<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">removeActivity</span><span class="token punctuation">(</span><span class="token class-name">Activity</span> activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>        activities<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">finishAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Activity</span> activity <span class="token operator">:</span> activities<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>activity<span class="token punctuation">.</span><span class="token function">isFinishing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                activity<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//BaseActivity</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BaseActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"BaseActivity"</span><span class="token punctuation">,</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ActivityCollector</span><span class="token punctuation">.</span><span class="token function">addActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用入栈</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ActivityCollector</span><span class="token punctuation">.</span><span class="token function">removeActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用出栈</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//ThirdActivity</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThirdActivity</span> <span class="token keyword">extends</span> <span class="token class-name">BaseActivity</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"ThirdActivity"</span><span class="token punctuation">,</span> <span class="token string">"Task id is "</span> <span class="token operator">+</span> <span class="token function">getTaskId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>third_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Button</span> button3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button_3<span class="token punctuation">)</span><span class="token punctuation">;</span>        button3<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token class-name">ActivityCollector</span><span class="token punctuation">.</span><span class="token function">finishAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用清栈</span>                <span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span>Process</span><span class="token punctuation">.</span><span class="token function">killProcess</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>os<span class="token punctuation">.</span></span>Process</span><span class="token punctuation">.</span><span class="token function">myPid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//杀掉当前线程</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-3-启动活动最佳写法"><a href="#7-3-启动活动最佳写法" class="headerlink" title="7.3 启动活动最佳写法"></a>7.3 启动活动最佳写法</h3><blockquote><p>优点：在实际合作开发对接中，让对接者直观了解启动本活动需要传递哪些数据</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//SecondActivity</span><span class="token comment">//将传递数据的功能封装，方便之后的调用。让调用者直观了解需要传入什么数据</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">actionStart</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">,</span> <span class="token class-name">String</span> data1<span class="token punctuation">,</span> <span class="token class-name">String</span> data2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token class-name">SecondActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"param1"</span><span class="token punctuation">,</span> data1<span class="token punctuation">)</span><span class="token punctuation">;</span>        intent<span class="token punctuation">.</span><span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"param2"</span><span class="token punctuation">,</span> data2<span class="token punctuation">)</span><span class="token punctuation">;</span>        context<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//FirstActivity</span><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>first_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Button</span> button1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Button</span><span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>id<span class="token punctuation">.</span>button_1<span class="token punctuation">)</span><span class="token punctuation">;</span>    button1<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token class-name">View</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment">//调用封装的方法传递数据</span>            <span class="token class-name">SecondActivity</span><span class="token punctuation">.</span><span class="token function">actionStart</span><span class="token punctuation">(</span><span class="token class-name">FirstActivity</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string">"data1"</span><span class="token punctuation">,</span> <span class="token string">"data2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Android第一行代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一章 安卓开发整体介绍|《第一行代码》笔记</title>
      <link href="/2021/12/14/di-yi-zhang-an-zhuo-kai-fa-zheng-ti-jie-shao-kai-shi-qi-cheng/"/>
      <url>/2021/12/14/di-yi-zhang-an-zhuo-kai-fa-zheng-ti-jie-shao-kai-shi-qi-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><h3 id="1-1-系统架构"><a href="#1-1-系统架构" class="headerlink" title="1.1 系统架构"></a>1.1 系统架构</h3><p><img src="https://i.loli.net/2021/10/09/iFWTetAq6OBwRZn.png" alt="Android架构图"></p><h4 id="1-1-1-Linux内核层"><a href="#1-1-1-Linux内核层" class="headerlink" title="1.1.1 Linux内核层"></a>1.1.1 Linux内核层</h4><ul><li>允许写底层硬件驱动</li><li>依靠Linux执行底层功能，例如线程和低层内存管理</li></ul><h4 id="1-1-2-硬件抽象层（HAL）"><a href="#1-1-2-硬件抽象层（HAL）" class="headerlink" title="1.1.2 硬件抽象层（HAL）"></a>1.1.2 硬件抽象层（HAL）</h4><ul><li>为特定类型硬件实现界面，例如相机和蓝牙模块。在API框架层要访问该硬件时，Android系统就是向API框架层提供此界面。</li></ul><h4 id="1-1-3-系统运行库层"><a href="#1-1-3-系统运行库层" class="headerlink" title="1.1.3 系统运行库层"></a>1.1.3 系统运行库层</h4><ul><li><p>本层中系统组件等（例如ART和HAL）使用到的是C/C++库提供的特性支持。例如SQLite提供的数据库，OpenGL ES 提供的2D/3D绘图，Webkit提供的浏览器内核。<br>如果在应用层需要使用到C/C++的代码，则需要Android NDK来访问这些原生库。</p></li><li><p>除了上述的库，还有Android运行时库。Android的核心库中可提供Java API框架的大部分功能，我们也可以使用Java语言编Android应用。此外，Android还包含了一款虚拟机——<a href="https://source.android.com/devices/tech/dalvik/index.html?hl=zh-cn">ART</a>(Android Runtime)，在Android 5.0前使用的是Dalvik，现在的ART是Dalvik的改进版。ART使得每一个应用都能运行在<strong>独立的进程</strong>中。</p></li><li><p>ART 编写执行 DEX 文件,DEX可以在低内存设备上运行多个虚拟机，其是一种专为 Android 设计的字节码格式，经过优化，使用的内存很少。其中编译工具链（例如 <a href="https://source.android.com/source/jack.html?hl=zh-cn">Jack</a>)）将 Java 源代码编译为 DEX 字节码，使其可在 Android 平台上运行。</p></li></ul><blockquote><h5 id="ART特性"><a href="#ART特性" class="headerlink" title="ART特性"></a>ART特性</h5><h6 id="1-预编译"><a href="#1-预编译" class="headerlink" title="1. 预编译"></a>1. 预编译</h6><p>Dalvik 中的应用每次运行时，字节码都需要通过即时编译器 JIT 转换为机器码，这会使得应用的运行效率降低。在 ART 中，系统在安装应用时会进行一次预编译（AOT，Ahead-Of-Time），将字节码预先编译成机器码并存储在本地，这样应用就不用在每次运行时执行编译了，运行效率也大大提高。</p><h6 id="2-垃圾回收算法"><a href="#2-垃圾回收算法" class="headerlink" title="2. 垃圾回收算法"></a>2. 垃圾回收算法</h6><p>在 Dalvik 采用的垃圾回收算法是<strong>标记-清除算法</strong>，启动垃圾回收机制会造成两次暂停（一次在遍历阶段，另一次在标记阶段）。而在 ART 下，GC 速度比 Dalvik 要快，这是因为应用本身做了垃圾回收的一些工作，启动 GC 后，不再是两次暂停，而是一次暂停，而且 ART 使用了一种新技术（packard pre-cleaning），在暂停前做了许多事情，减轻了暂停时的工作量。</p><h6 id="3-64-位"><a href="#3-64-位" class="headerlink" title="3. 64 位"></a>3. 64 位</h6><p>Dalvik 是为 32 位 CPU 设计的，而 ART 支持 64 位并兼容 32 位 CPU，这也是 Dalvik 被淘汰的主要原因。</p></blockquote><h4 id="1-1-4-应用框架层-Java-API框架"><a href="#1-1-4-应用框架层-Java-API框架" class="headerlink" title="1.1.4 应用框架层(Java API框架)"></a>1.1.4 应用框架层(Java API框架)</h4><ul><li>提供构建程序的各种API框架，Android系统自身会用到，我们开发应用也会用到</li></ul><h4 id="1-1-5-应用层"><a href="#1-1-5-应用层" class="headerlink" title="1.1.5 应用层"></a>1.1.5 应用层</h4><ul><li>本层包括系统自身的应用，也包括我们开发或者下载安装的应用。就是手机软件，是对使用者最直观的体现。</li></ul><h3 id="1-2-Android应用开发特性"><a href="#1-2-Android应用开发特性" class="headerlink" title="1.2 Android应用开发特性"></a>1.2 Android应用开发特性</h3><ul><li><p><strong>四大组件</strong></p><blockquote><p>Activity： 程序的页面<br>Service：后台服务，例如后台闹钟，自动定位<br>Broadcast Receiver：接收来自各处的广播<br>Content Provider：使得程序之间可以共享数据，例如读取电话簿的联系人</p></blockquote></li><li><p><strong>各种系统控件</strong>，例如按钮输入框啥的</p></li><li><p><strong>SQLite数据库</strong>，也可借用第三方库(LitePal)更容易上手</p></li><li><p><strong>多媒体</strong>，使用程序控制音乐、视频等</p></li><li><p><strong>定位</strong>，可借用定位开发很多功能</p></li></ul><h2 id="2-开发工具"><a href="#2-开发工具" class="headerlink" title="2. 开发工具"></a>2. 开发工具</h2><ul><li>现在的Android studio 已经更新到4的版本了，界面相比以前更美观，多了许多功能等，实际上手体验即可</li></ul><h2 id="3-资源文件"><a href="#3-资源文件" class="headerlink" title="3. 资源文件"></a>3. 资源文件</h2><h3 id="3-1-无需过多关心的文件"><a href="#3-1-无需过多关心的文件" class="headerlink" title="3.1 无需过多关心的文件"></a>3.1 无需过多关心的文件</h3><blockquote><ul><li>.gradle 和.idea </li><li>build</li><li>gradle：支持gradle自下载</li><li> gradle.properties</li><li>gradlew/gradlew.bat：第一个mac/Linux系统的，第二个win系统的</li><li>xxx.iml：IDEA自生成</li><li>setting.gradle</li></ul></blockquote><h3 id="3-2-gitignore"><a href="#3-2-gitignore" class="headerlink" title="3.2 .gitignore"></a>3.2 .gitignore</h3><ul><li>在这可指定啥目录不关联到git</li></ul><h3 id="3-3-local-properties"><a href="#3-3-local-properties" class="headerlink" title="3.3 local.properties"></a>3.3 local.properties</h3><ul><li>本机的Android SDK路径，我之前把sdk安装到了d盘，那么这里就需要更改一下路径</li></ul><h3 id="3-4-app"><a href="#3-4-app" class="headerlink" title="3.4 app"></a>3.4 app</h3><ul><li>build：不用理</li><li>libs：使用到第三方jar包的时候放这</li><li>androidTest：可在此对项目编写一些自动化测试</li><li>main/java：所有java代码</li><li>main/res：各种资源目录</li><li>main/AndroidManifest.xml：项目的配置文件，四大组件、各种权限都要在这里注册</li><li>test：另一种自动测试</li><li>.gitignore：和上边的作用一样</li><li>app.xml：IDEA自生成</li><li>build.gradle</li><li>proguard-rule.pro：指定代码的混淆规则，如果不希望代码被破解者容易阅读的话</li></ul><h3 id="3-5-build-gradle"><a href="#3-5-build-gradle" class="headerlink" title="3.5 build.gradle"></a>3.5 build.gradle</h3><ul><li><p>AS是采用Gradle来构建整个项目的</p><h4 id="3-5-1-外层"><a href="#3-5-1-外层" class="headerlink" title="3.5.1 外层"></a>3.5.1 外层</h4><p><img src="https://i.loli.net/2021/10/09/DB8MzgyZhnLJb9c.png"></p></li><li><p>由上图可以看出两处的repositories都包含google()和jcenter(),这是我们声明要引用这些代码仓库的开源项目</p></li><li><p>接下来dependencies处使用classpath声明了一个插件，是因为需要使用这样一个Android插件来利用Gradle构建项目（Gradle不是专为Android开发的）</p></li></ul><h4 id="3-5-2-内层"><a href="#3-5-2-内层" class="headerlink" title="3.5.2 内层"></a>3.5.2 内层</h4><p><img src="https://i.loli.net/2021/10/09/xLc4mzpWFeaCDtv.png"></p><h3 id="3-6-AndroidManifest-xml"><a href="#3-6-AndroidManifest-xml" class="headerlink" title="3.6 AndroidManifest.xml"></a>3.6 AndroidManifest.xml</h3><p><img src="https://i.loli.net/2021/10/09/rgW7vHw5SoplJfk.png"></p><h3 id="3-7-res资源文件"><a href="#3-7-res资源文件" class="headerlink" title="3.7 res资源文件"></a>3.7 res资源文件</h3><p><img src="https://i.loli.net/2021/10/09/5rBj9DJGylaxQWv.png"></p><h2 id="4-使用日志"><a href="#4-使用日志" class="headerlink" title="4. 使用日志"></a>4. 使用日志</h2><p>按升序的log级别</p><ul><li>Log.v()：verbose级别</li><li>Log.d()：debug级别</li><li>Log.i()：info级别</li><li>Log.w()：warn级别</li><li>Log.e()：error级别</li></ul><blockquote><ul><li><p>小tips</p><p>可以使用logd+Tab/Enter，快捷编写日志打印</p><p>可以在外部使用lodt+Tab/Enter，快捷编写String TAG私有类</p></li></ul></blockquote><p>相关链接：</p><p><a href="https://juejin.cn/post/6844903897958449166#heading-15">探索 Android 内存优化方法 - 掘金 (juejin.cn)</a></p><p><a href="https://developer.android.com/guide/platform?hl=zh-cn">平台架构  | Android 开发者  | Android Developers</a></p>]]></content>
      
      
      <categories>
          
          <category> Android第一行代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
